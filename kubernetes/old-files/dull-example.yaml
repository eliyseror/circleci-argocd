apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp-container
          image: "eliseror/new_repo:argocd_8" 
          ports:
            - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: myapp-service-weather
  labels:
    app: myapp
spec:
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp-ingress
  namespace: default  # Make sure it's in the same namespace as your service
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
   # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: weather-app-eli.duckdns.org  # Subdomain for app2
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp-service-weather  # Your service name here
                port:
                  number: 80


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: argocd-issuer-argocd-letsencrypt
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: 'HTTPS'
spec:
  rules:
    - host: argocd-eli-1.duckdns.org 
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  name: https
  tls:
    - hosts:
        - argocd-prod.x.com
      secretName: argocd-secret
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:    
    nginx.ingress.kubernetes.io/proxy-body-size: 5m  
  name: prometheus-ingress
  namespace: monitoring
spec:
  ingressClassName: nginx
  rules:
  - host: monitor-weather-app-eli.duckdns.org  # Subdomain for app2
    http:
      paths:
      - backend:
          service:
            name: my-k8s-prom-stack-kube-pro-prometheus
            port:
              number: 9090
        path: /
        pathType: Prefix
        
---        
        
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring  # Replace with your Grafana namespace if different
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: grafana-eli.duckdns.org  # Replace with your desired domain or external IP
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-k8s-prom-stack-grafana  # Grafana service name
                port:
                  number: 80  # The port Grafana is exposed on

